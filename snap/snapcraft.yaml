name: rubber-band-async # you probably want to 'snapcraft register <name>'
version: 'latest' # will generate e.g. 'rubber-band-async_latest_amd64.snap' - use 'git' (without quotes) to generate a snapfile named after the git commit e.g. rubber-band-async_0+git.6111883_amd64.snap 
summary: Rubberband wxPython app with wxasync clock # 79 char long summary
description: |
  Rubberband wxPython app with wxasync clock

  To build this snap:
    snapcraft
  If you get trouble
    snapcraft clean

  Install the snap locally
    sudo snap install --devmode --dangerous *.snap
    snap list

  Run
    rubber-band-async

  Publish
    snapcraft login (use ubuntu one auth)
    snapcraft register rubber-band-async
    snapcraft push --release=stable rubber-band-async_0.6_amd64.snap   <--- stable release


grade: stable # devel # must be 'stable' to release into candidate/stable channels
confinement: strict # use 'strict' once you have the right plugs and slots
# base: core18
base: core20

apps:
    rubber-band-async:
        # command: python3 $SNAP/rubber_band_async.py
        # command: python $SNAP/rubber_band_async.py
        # command: $SNAP/rubber_band_async.py
        # command: ls $SNAP  # even this FAILS - The specified command 'ls $SNAP' defined in the app 'rubber-band-async' does not exist.
        command: |
          pwd
          ls -l
          venv/bin/python rubber_band_async.py

        # extensions: [gnome-3-34]
        extensions: [gnome-3-38]
        plugs: [unity7, audio-playback, home, network]

    #
    # SUB-COMMANDS (diagnostic use only)
    # 
    # After building (snapcraft) and installing the snap locally (sudo snap install --devmode --dangerous *.snap),
    # as well as being able to 'pynsource' from the terminal, you can run a subcommand with e.g. 'pynsource.report'
    #
    # For all python interpreter invocations (no script specified), both '' and site packages are automatically in sys path, $SNAP root is not.
    # Also os.getcwd() is the host's not the inner snap filesystem!
    #
    # Run Python interpreter - run with 'pynsource.python'
    # Run Python interpreter and trace imports - run with e.g. 'pynsource.python-v'

    python3:
        command: python3
    pythonx:
        command: python
    python-v:
        command: python3 -V
    python-vers:
        command: python3 -c "import sys; print(sys.version)"
    python-vvv:
        command: python3 -vvv
    report:
        command: python3 $SNAP/report_snap_env.py

parts:
  copy-stuff:
    plugin: dump
    source: .
  copy-stuff-diagnostics:
    plugin: dump
    source: ./snap/local/andy-diagnostics    
  rubber-band-async:
    plugin: python
    # python-version: python3
    # python-version: python3  # core20, remove cos error: Additional properties are not allowed ('python-version' was unexpected)
    source: .

    # stage-packages:
    #   - python3.9-venv
    build-packages:
      - python3.8-venv
      - python3.8-dev
      # - curl  # need this to grab pip, but it doesn't make pip available when needed?
    build-environment:
      - SNAPCRAFT_PYTHON_INTERPRETER: python3.8
    override-build: |
      # Workaround a bug in snapcraft python plugin
      # https://forum.snapcraft.io/t/build-a-snap-with-any-version-of-python-i-want/10420/8
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/lib/python3.8/distutils
      ln -s /usr/lib/python3.8/distutils $SNAPCRAFT_PART_INSTALL/usr/lib/python3.8/distutils
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/include/
      ln -s /usr/include/python3.8 $SNAPCRAFT_PART_INSTALL/usr/include/python3.8

      # WORKS and is NEEDED cos added curl to build-packages above
      apt-get install --yes curl
      curl -sS https://bootstrap.pypa.io/get-pip.py | sudo python3

      # which python3  # /snap/gnome-3-38-2004-sdk/current/usr/bin/python3
      # which pip      # /snap/gnome-3-38-2004-sdk/current/usr/bin/pip

      # echo lets look in /usr/bin  <-- exists OK but does not list python
      # ls /usr/bin

      # echo lets look in usr/bin   <--- does not exist, FAILS
      # ls usr/bin

      echo lets look in bin  # <-- exists, contains the folder 'build'
      # ls bin || true
      ls -l bin/build || true

      echo lets look in dollar snap which expands to /snap/snapcraft/6596
      # ls -l $SNAP || true

      # drwxr-xr-x 4 root root   0 Jun 18 21:49 bin
      # drwxr-xr-x 7 root root   0 Jun 18 21:49 etc
      # drwxr-xr-x 7 root root   0 Jun 18 21:49 legacy_snapcraft
      # drwxr-xr-x 5 root root   0 Jun 18 21:49 lib
      # drwxr-xr-x 2 root root   0 Jun 18 21:49 meta
      # drwxr-xr-x 6 root root   0 Jun 18 21:49 share
      # drwxr-xr-x 3 root root   0 Jun 18 21:49 snap
      # -rw-r--r-- 1 root root 992 Jun 18 21:40 snapcraft-completion
      # drwxr-xr-x 6 root root   0 Jun 18 21:49 usr
      # drwxr-xr-x 5 root root   0 Jun 18 21:48 var

      # This interesting command gets issued, which creates the python venv in 'install' dir
      # Note the python that is invoked. 
      #  
      # python3.8 -m venv /root/parts/rubber-band-async/install

      snapcraftctl build

    stage-packages:
        # - curl  doesn't help - need to have this in build or apt-get it
        - python3.8-venv
        - libssl-dev
        - libjpeg-dev
        - libtiff-dev
        - libsdl1.2-dev
        - libnotify-dev
        - freeglut3
        - ibus-gtk3

        # - libwebkitgtk-3.0-0 <------ the only change core18 -> core20 in this stage-packages section
        - libwebkit2gtk-4.0-37

        - zlib1g
        - libsm6
        - libpulse0
        - libslang2
        - libsdl1.2debian
        - libgtk2.0-0
        - libpcre3
        - liblzma5
        - libsdl2-mixer-2.0-0 
        - libsdl2-image-2.0-0 
        - libsdl2-2.0-0
    python-packages:
        # - https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-18.04/wxPython-4.1.0-cp36-cp36m-linux_x86_64.whl
        # - https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-18.04/wxPython  # will pick up py36 no doubt NO FAILS
        # - https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-20.04/wxPython-4.1.1-cp39-cp39-linux_x86_64.whl
        - https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-20.04/wxPython-4.1.1-cp38-cp38-linux_x86_64.whl

    requirements:
        - /root/project/requirements.txt
